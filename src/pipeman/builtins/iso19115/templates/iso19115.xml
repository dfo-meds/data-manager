<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<mdb:MD_Metadata xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://standards.iso.org/iso/19115/-3/mdb/2.0 https://schemas.isotc211.org/19115/-3/mdb/2.0/mdb.xsd"
  xmlns:gml="http://www.opengis.net/gml/3.2"
  xmlns:mpc="http://standards.iso.org/iso/19115/-3/mpc/1.0"
  xmlns:mri="http://standards.iso.org/iso/19115/-3/mri/1.0"
  xmlns:mrl="http://standards.iso.org/iso/19115/-3/mrl/2.0"
  xmlns:mmi="http://standards.iso.org/iso/19115/-3/mmi/1.0"
  xmlns:mdb="http://standards.iso.org/iso/19115/-3/mdb/2.0"
  xmlns:mcc="http://standards.iso.org/iso/19115/-3/mcc/1.0"
  xmlns:msr="http://standards.iso.org/iso/19115/-3/msr/2.0"
  xmlns:mac="http://standards.iso.org/iso/19115/-3/mac/2.0"
  xmlns:cit="http://standards.iso.org/iso/19115/-3/cit/2.0"
  xmlns:mrs="http://standards.iso.org/iso/19115/-3/mrs/1.0"
  xmlns:gco="http://standards.iso.org/iso/19115/-3/gco/1.0"
  xmlns:lan="http://standards.iso.org/iso/19115/-3/lan/1.0"
  xmlns:mco="http://standards.iso.org/iso/19115/-3/mco/1.0"
  xmlns:gex="http://standards.iso.org/iso/19115/-3/gex/1.0"
  xmlns:mdq="http://standards.iso.org/iso/19157/-2/mdq/1.0"
  xmlns:mas="http://standards.iso.org/iso/19115/-3/mas/1.0"
  xmlns:mrd="http://standards.iso.org/iso/19115/-3/mrd/1.0"
  xmlns:mrc="http://standards.iso.org/iso/19115/-3/mrc/2.0"
  xmlns:gmx="http://www.isotc211.org/2005/gmx"
  xmlns:xlink="http://www.w3.org/1999/xlink">
  {% import 'iso_macros.xml' as iso %}
  <mdb:metadataIdentifier>
    <mcc:MD_Identifier>
      <mcc:authority>
        <cit:CI_Citation>
          <cit:title>
            <gco:CharacterString>ca.gc.dfo-mpo.cnodc-cndoc</gco:CharacterString>
          </cit:title>
        </cit:CI_Citation>
      </mcc:authority>
      <mcc:code>
        <gco:CharacterString>{{ dataset.guid() }}</gco:CharacterString>
      </mcc:code>
    </mcc:MD_Identifier>
  </mdb:metadataIdentifier>
  <mdb:defaultLocale>
    {{iso.render_locale(dataset['default_locale'])}}
  </mdb:defaultLocale>
  {% if dataset['parent_metadata'] %}
  <mdb:parentMetadata>
    {{ iso.render_citation(dataset['parent_metadata']) }}
  </mdb:parentMetadata>
  {% endif %}
  <mdb:metadataScope>
    <mdb:MD_MetadataScope>
      <mdb:resourceScope>
        <mcc:MD_ScopeCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#MD_ScopeCode" codeListValue="dataset" />
      </mdb:resourceScope>
    </mdb:MD_MetadataScope>
  </mdb:metadataScope>
  {% for resp in responsibilities %}
  <mdb:contact>
    {{ iso.render_responsibility(resp['role']['short_name'], resp['contact']) }}
  </mdb:contact>
  {% endfor %}
  {% for date in dates %}
  <mdb:dateInfo>
    {{ iso.render_date(date['type']['short_name'], date['date']) }}
  </mdb:dateInfo>
  {% endfor %}
  {% for standard in dataset['metadata_standards'] %}
  <mdb:metadataStandard>
    {{ iso.render_citation(standard) }}
  </mdb:metadataStandard>
  {% endfor %}
  {% for profile in dataset['metadata_profiles'] %}
  <mdb:metadataProfile>
    {{ iso.render_citation(profile) }}
  </mdb:metadataProfile>
  {% endfor %}
  {% for alt_md in dataset['alt_metadata'] %}
  <mdb:alternativeMetadataReference>
    {{ iso.render_citation(alt_md) }}
  </mdb:alternativeMetadataReference>
  {% endfor %}
  {% for locale in dataset['other_locales'] %}
  <mdb:otherLocale>
        {{iso.render_locale(locale)}}
  </mdb:otherLocale>
  {% endfor %}
  {% for meta_url in dataset['canon_urls'] %}
  <mdb:metadataLinkage>
    {{ iso.render_resource(meta_url) }}
  </mdb:metadataLinkage>
  {% endfor %}
  {# <!-- spatialRepresentationInfo --> #}
    {% if dataset['horizontal_ref_system'] %}
  <mdb:referenceSystemInfo>
     {{iso.render_ref_system(dataset['horizontal_ref_system'])}}
  </mdb:referenceSystemInfo>
    {% endif %}
    {% if dataset['vertical_ref_system'] %}
  <mdb:referenceSystemInfo>
     {{iso.render_ref_system(dataset['vertical_ref_system'])}}
  </mdb:referenceSystemInfo>
    {% endif %}
    {% if dataset['temporal_ref_system'] %}
  <mdb:referenceSystemInfo>
     {{iso.render_ref_system(dataset['temporal_ref_system'])}}
  </mdb:referenceSystemInfo>
    {% endif %}
  {# <!-- metadataExtensionInfo --> #}
  <mdb:identificationInfo>
    <mri:MD_DataIdentification>
      <mri:citation>
        {{iso.render_citation(dataset_citation)}}
      </mri:citation>
      {% if dataset['abstract'] %}
      <mri:abstract xsi:type="lan:PT_FreeText_PropertyType">{{iso.render_text(dataset['abstract'])}}</mri:abstract>
      {% endif %}
      {% if dataset['purpose'] %}
      <mri:purpose xsi:type="lan:PT_FreeText_PropertyType">{{iso.render_text(dataset['purpose'])}}</mri:purpose>
      {% endif %}
      {% if dataset['credit'] %}
      <mri:credit xsi:type="lan:PT_FreeText_PropertyType">{{iso.render_text(dataset['credit'])}}</mri:credit>
      {% endif %}
      {% if dataset['status'] %}
      <mri:status>
        <mcc:MD_ProgressCode codeList="http://standards.iso.org/iso/19115/resources/Codelists/cat/codelists.xml#MD_ProgressCode" codeListValue="{{dataset['status']['short_name']}}">{{dataset['status']['short_name']}}</mcc:MD_ProgressCode>
      </mri:status>
      {% endif %}
      {% if dataset['point_of_contact'] %}
      <mri:pointOfContact>
        {{ iso.render.responsibility("pointOfContact", dataset['point_of_contact']) }}
      </mri:pointOfContact>
      {% endif %}
      {% if dataset['spatial_representation_type'] %}
      <mri:spatialRepresentationType>
        <mcc:MD_SpatialRepresentationTypeCode codeList="https://data.noaa.gov/resources/iso19139/schema/resources/Codelist/gmxCodelists.xml#MD_SpatialRepresentationTypeCode" codeListValue="{{dataset['spatial_representation']['short_name']}}">{{dataset['spatial_representation']['short_name']}}</mcc:MD_SpatialRepresentationTypeCode>
      </mri:spatialRepresentationType>
      {% endif %}
      {% for sr in dataset['spatial_resolution'] %}
      <mri:spatialResolution>
        {{ iso.render_spatial_res(sr) }}
      </mri:spatialResolution>
      {% endfor %}
      {% for tr in dataset['temporal_resolution'] %}
      <mri:temporalResolution>
        {{ iso.render_temporal_res(sr) }}
      </mri:temporalResolution>
      {% endfor %}
      {% if dataset['topic_category'] %}
      {% for tc in dataset['topic_category'] %}
      <mri:topicCategory>
        <mri:MD_TopicCategoryCode>{{tc['short_name']}}</mri:MD_TopicCategoryCode>
      </mri:topicCategory>
      {% endfor %}
      {% endif %}
      <mri:extent>
        <gex:EX_Extent>
          {% if dataset['bbox_north'] %}
          <gex:geographicElement>
            <gex:EX_GeographicBoundingBox>
              <gex:extentTypeCode>
                <gco:Boolean>true</gco:Boolean>
              </gex:extentTypeCode>
              <gex:westBoundLongitude>
                <gco:Decimal>{{dataset['bbox_west']}}</gco:Decimal>
              </gex:westBoundLongitude>
              <gex:eastBoundLongitude>
                <gco:Decimal>{{dataset['bbox_east']}}</gco:Decimal>
              </gex:eastBoundLongitude>
              <gex:southBoundLatitude>
                <gco:Decimal>{{dataset['bbox_south']}}</gco:Decimal>
              </gex:southBoundLatitude>
              <gex:northBoundLatitude>
                <gco:Decimal>{{dataset['bbox_north']}}</gco:Decimal>
              </gex:northBoundLatitude>
            </gex:EX_GeographicBoundingBox>
          </gex:geographicElement>
          {% endif %}
          {% if dataset['start_time'] %}
          <gex:temporalElement>
            <gex:EX_TemporalExtent>
              <gex:extent>
                {{ iso.render_time_period(dataset['start_time'], dataset['end_time'], dataset['is_ongoing']) }}
              </gex:extent>
            </gex:EX_TemporalExtent>
          </gex:temporalElement>
          {% endif %}
          {% if dataset['vertical_min'] %}
          <gex:verticalElement>
            <gex:EX_VerticalExtent>
              <gex:minimumValue>
                <gco:Real>{{dataset['vertical_min']}}</gco:Real>
              </gex:minimumValue>
              <gex:maximumValue>
                <gco:Real>{{dataset['vertical_max']}}</gco:Real>
              </gex:maximumValue>
              {% if dataset['vertical_ref_system'] %}
              <gex:verticalCRSId>
                {{ iso.render_ref_system(dataset['vertical_ref_system']) }}
              </gex:verticalCRSId>
              {% endif %}
            </gex:EX_VerticalExtent>
          </gex:verticalElement>
          {% endif %}
        </gex:EX_Extent>
      </mri:extent>
      {% for doc in dataset['additional_docs'] %}
      <mri:additionalDocumentation>
        {{ iso.render_citation(doc) }}
      </mri:additionalDocumentation>
      {% endfor %}
      {% if dataset['processing_code'] %}
      <mri:processingLevel>
        {{ iso.render_id(dataset['processing_code'], dataset['processing_desc'], dataset['processing_system']) }}
      </mri:processingLevel>
      {% endif %}
      <mri:resourceMaintenance>
        {{ iso.render_maintenance_info(dataset['resource_maintenance_frequency'], dataset_maintenance) }}
      </mri:resourceMaintenance>
      {% for graphic in dataset['graphics'] %}
      <mri:graphicOverview>
        {{ iso.render_graphic(graphic) }}
      </mri:graphicOverview>
      {% endfor %}
      {# <!-- resourceFormat --> #}
      {% if grouped_keywords %}
        {% for key in grouped_keywords %}
      <mri:descriptiveKeywords>
        {{ iso.render_keywords(grouped_keywords[key]['keywords'], grouped_keywords[key]['thesaurus']) }}
      </mri:descriptiveKeywords>
        {% endfor %}
      {% endif %}
      {# <!-- resourceSpecificUsage --> #}
      {% if dataset['licenses'] %}
      {% for license in dataset['licenses'] %}
      <mri:resourceConstraints>
        {{ iso.render_constraint(license) }}
      </mri:resourceConstraints>
      {% endfor %}
      {% endif %}
      {# <!-- associatedResource --> #}
      {% if dataset['dataset_locale'] %}
      <mri:defaultLocale>
        {{iso.render_locale(dataset['dataset_locale'])}}
      </mri:defaultLocale>
      {% endif %}
      {% if dataset['dataset_other_locales'] %}
          <mri:otherLocale>
        {% for locale in dataset['dataset_other_locales'] %}
            {{iso.render_locale(locale)}}
        {% endfor %}
          </mri:otherLocale>
      {% endif %}
      {% if dataset['environment_desc'] %}
      <mri:environmentDescription>{{ iso.render_text(dataset['environment_desc']) }}</mri:environmentDescription>
      {% endif %}
      {% if dataset['supplemental'] %}
      <mri:supplementalInformation>{{ iso.render_text(dataset['supplemental']) }}</mri:supplementalInformation>
      {% endif %}
    </mri:MD_DataIdentification>
  </mdb:identificationInfo>
  {# <!-- contentInfo --> #}
  <mdb:distributionInfo>
    {% for dc in dataset['distributors'] %}
      {{ iso.render_distribution(dc) }}
    {% endfor %}
  </mdb:distributionInfo>
  {# <!-- dataQualityInfo --> #}
  {# <!-- resourceLineage --> #}
  {# <!-- portrayalCatalogueInfo --> #}
  {% if dataset['meta_licenses'] %}
  {% for license in dataset['meta_licenses'] %}
  <mdb:metadataConstraints>
    {{ iso.render_constraint(license) }}
  </mdb:metadataConstraints>
  {% endfor %}
  {% endif %}
  {# <!-- applicationSchemaInfo --> #}
  <mdb:metadataMaintenance>
    {{ iso.render_maintenance_info(dataset['metadata_maintenance_frequency'], metadata_maintenance) }}
  </mdb:metadataMaintenance>
  {# <!-- acquisitionInfo --> #}
</mdb:MD_Metadata>
