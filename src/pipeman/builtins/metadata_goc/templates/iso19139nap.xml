<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<gmd:MD_Metadata xmlns:gmd="http://www.isotc211.org/2005/gmd"
                 xmlns:srv="http://www.isotc211.org/2005/srv"
                 xmlns:gco="http://www.isotc211.org/2005/gco"
                 xmlns:xlink="http://www.w3.org/1999/xlink"
                 xmlns:gfc="http://www.isotc211.org/2005/gfc"
                 xmlns:gmi="http://www.isotc211.org/2005/gmi"
                 xmlns:gsr="http://www.isotc211.org/2005/gsr"
                 xmlns:gss="http://www.isotc211.org/2005/gss"
                 xmlns:gts="http://www.isotc211.org/2005/gts"
                 xmlns:gmx="http://www.isotc211.org/2005/gmx"
                 xmlns:gml="http://www.opengis.net/gml/3.2"
                 xmlns="http://www.isotc211.org/2005/gmd"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="http://www.isotc211.org/2005/gmd http://nap.geogratis.gc.ca/metadata/tools/schemas/metadata/can-cgsb-171.100-2009-a/gmd/gmd.xsd http://www.isotc211.org/2005/srv http://nap.geogratis.gc.ca/metadata/tools/schemas/metadata/can-cgsb-171.100-2009-a/srv/srv.xsd http://www.geconnections.org/nap/napMetadataTools/napXsd/napm http://nap.geogratis.gc.ca/metadata/tools/schemas/metadata/can-cgsb-171.100-2009-a/napm/napm.xsd">
  {% import 'iso19139nap_macros.xml' as iso with context %}
  <gmd:fileIdentifier>
    <gco:CharacterString>{{ xml_escape(dataset.guid()) }}</gco:CharacterString>
  </gmd:fileIdentifier>
  {{iso.render_locale(dataset['default_locale'], True)}}
  {# <!-- gmd:parentIdentifier (gco:charStr with fileIdentifier in it) --> #}
  <gmd:hierarchyLevel>
    <gmd:MD_ScopeCode codeList="http://nap.geogratis.gc.ca/metadata/register/napMetadataRegister.xml#IC_108" codeListValue="RI_622">dataset</gmd:MD_ScopeCode>
  </gmd:hierarchyLevel>
  {% for resp in responsibilities %}
  <gmd:contact>
    {{ iso.render_responsibility(resp['role']['short_name'], resp['contact']) }}
  </gmd:contact>
  {% endfor %}
  <gmd:dateStamp>
    {{ iso.render_date(dataset['metadata_modified_date']) }} {# <!-- todo: should be metadata revision date, check iso 19115 template too --> #}
  </gmd:dateStamp>
  <gmd:metadataStandardName xsi:type="gmd:PT_FreeText_PropertyType">
    <gco:CharacterString>North American Profile of ISO 19115:2003 - Geographic information - Metadata</gco:CharacterString>
    <gmd:PT_FreeText>
       <gmd:textGroup>
          <gmd:LocalisedCharacterString xmlns="" locale="#fra">Profil nord-américain de la norme ISO 19115:2003 - Information géographique - Métadonnées</gmd:LocalisedCharacterString>
       </gmd:textGroup>
    </gmd:PT_FreeText>
  </gmd:metadataStandardName>
  <gmd:metadataStandardVersion>
      <gco:CharacterString>CAN/CGSB-171.100-2009</gco:CharacterString>
  </gmd:metadataStandardVersion>
  <gmd:dataSetURI>
    <gco:CharacterString>ca.gc.dfo-mpo.cnodc-cndoc/{{xml_escape(dataset.guid())}}</gco:CharacterString>
  </gmd:dataSetURI>
  {% if dataset['other_locales'] %}
  {% for locale in dataset['other_locales'] %}
  <gmd:locale>
    {{iso.render_long_locale(locale)}}
  </gmd:locale>
  {% endfor %}
  {% endif %}
  {# <!-- spatialRepresentationInfo --> #}
  {% if dataset['horizontal_ref_system'] %}
  <gmd:referenceSystemInfo>
     {{iso.render_ref_system(dataset['horizontal_ref_system'])}}
  </gmd:referenceSystemInfo>
  {% endif %}
  {% if dataset['vertical_ref_system'] %}
  <gmd:referenceSystemInfo>
     {{iso.render_ref_system(dataset['vertical_ref_system'])}}
  </gmd:referenceSystemInfo>
  {% endif %}
  {% if dataset['temporal_ref_system'] %}
  <gmd:referenceSystemInfo>
     {{iso.render_ref_system(dataset['temporal_ref_system'])}}
  </gmd:referenceSystemInfo>
  {% endif %}
  {# <!-- metadataExtensionInfo --> #}
  <gmd:identificationInfo>
    <gmd:MD_DataIdentification>
      <gmd:citation>
        {{iso.render_citation(dataset_citation)}}
      </gmd:citation>
      {% if dataset['abstract'] %}
      <gmd:abstract xsi:type="gmd:PT_FreeText_PropertyType">{{iso.render_text(dataset['abstract'])}}</gmd:abstract>
      {% endif %}
      {% if dataset['purpose'] %}
      <gmd:purpose xsi:type="gmd:PT_FreeText_PropertyType">{{iso.render_text(dataset['purpose'])}}</gmd:purpose>
      {% endif %}
      {% if dataset['credit'] %}
      <gmd:credit xsi:type="gmd:PT_FreeText_PropertyType">{{iso.render_text(dataset['credit'])}}</gmd:credit>
      {% endif %}
      {% if dataset['status'] %}
      {% for stat in dataset['status'] %}
      <gmd:status>
        {% with code_list, code_value, text_value = nap_code_map(stat['short_name'], 'MD_ProgressCode') %}
        <gmd:MD_ProgressCode codeList="{{xml_quote(code_list)}}" codeListValue="{{xml_quote(code_value)}}">{{xml_escape(text_value)}}</gmd:MD_ProgressCode>
        {% endwith %}
      </gmd:status>
      {% endfor %}
      {% endif %}
      {% if dataset['point_of_contact'] %}
      <gmd:pointOfContact>
        {{ iso.render_responsibility("pointOfContact", dataset['point_of_contact']) }}
      </gmd:pointOfContact>
      {% endif %}
      <gmd:resourceMaintenance>
        {% if dataset['resource_maintenance_frequency'] %}
        {{ iso.render_maintenance_info(dataset['resource_maintenance_frequency']['short_name'], dataset_maintenance) }}
        {% else %}
        {{ iso.render_maintenance_info("", dataset_maintenance) }}
        {% endif %}
      </gmd:resourceMaintenance>
      {% if dataset['graphics'] %}
      {% for graphic in dataset['graphics'] %}
      <gmd:graphicOverview>
        {{ iso.render_graphic(graphic) }}
      </gmd:graphicOverview>
      {% endfor %}
      {% endif %}
      {# <!-- resource format --> #}
      {% if grouped_keywords %}
        {% for key in stable_dict_key_list(grouped_keywords) %}
      <gmd:descriptiveKeywords>
        {{ iso.render_keywords(grouped_keywords[key]) }}
      </gmd:descriptiveKeywords>
        {% endfor %}
      {% endif %}
      {# <!-- resource specific usage --> #}
      {% if dataset['licenses'] %}
      {% for license in dataset['licenses'] %}
      <gmd:resourceConstraints>
        {{ iso.render_constraint(license) }}
      </gmd:resourceConstraints>
      {% endfor %}
      {% endif %}
      {# <!-- aggregation info --> #}
      {% if dataset['spatial_representation_type'] %}
      {% for srt in dataset['spatial_representation_type'] %}
      <gmd:spatialRepresentationType>
        {% with code_list, code_value, text_value = nap_code_map(srt['short_name'], 'MD_SpatialRepresentationTypeCode') %}
        <gmd:MD_SpatialRepresentationTypeCode codeList="{{xml_quote(code_list)}}" codeListValue="{{xml_quote(code_value)}}">{{xml_escape(text_value)}}</gmd:MD_SpatialRepresentationTypeCode>
        {% endwith %}
      </gmd:spatialRepresentationType>
      {% endfor %}
      {% endif %}
      {% if dataset['spatial_resolution'] %}
      <gmd:spatialResolution>
        {{ iso.render_spatial_res(dataset['spatial_resolution']) }}
      </gmd:spatialResolution>
      {% endif %}
      {% if dataset['dataset_locale'] %}
      {{iso.render_locale(dataset['dataset_locale'])}}
      {% endif %}
      {% if dataset['topic_category'] %}
      {% for tc in dataset['topic_category'] %}
      <gmd:topicCategory>
        <gmd:MD_TopicCategoryCode>{{xml_escape(tc['short_name'])}}</gmd:MD_TopicCategoryCode>
      </gmd:topicCategory>
      {% endfor %}
      {% endif %}
      {% if dataset['environment_desc'] %}
      <gmd:environmentDescription>{{ iso.render_text(dataset['environment_desc']) }}</gmd:environmentDescription>
      {% endif %}
      <gmd:extent>
        <gmd:EX_Extent>
          {% if dataset['bbox_north'] is not none %}
          <gmd:geographicElement>
            <gmd:EX_GeographicBoundingBox>
              <gmd:extentTypeCode>
                <gco:Boolean>true</gco:Boolean>
              </gmd:extentTypeCode>
              <gmd:westBoundLongitude>
                <gco:Decimal>{{xml_escape(dataset['bbox_west'])}}</gco:Decimal>
              </gmd:westBoundLongitude>
              <gmd:eastBoundLongitude>
                <gco:Decimal>{{xml_escape(dataset['bbox_east'])}}</gco:Decimal>
              </gmd:eastBoundLongitude>
              <gmd:southBoundLatitude>
                <gco:Decimal>{{xml_escape(dataset['bbox_south'])}}</gco:Decimal>
              </gmd:southBoundLatitude>
              <gmd:northBoundLatitude>
                <gco:Decimal>{{xml_escape(dataset['bbox_north'])}}</gco:Decimal>
              </gmd:northBoundLatitude>
            </gmd:EX_GeographicBoundingBox>
          </gmd:geographicElement>
          {% endif %}
          {% if dataset['start_time'] is not none %}
          <gmd:temporalElement>
            <gmd:EX_TemporalExtent>
              <gmd:extent>
                {{ iso.render_time_period(dataset['start_time'], dataset['end_time'], dataset['is_ongoing']) }}
              </gmd:extent>
            </gmd:EX_TemporalExtent>
          </gmd:temporalElement>
          {% endif %}
          {% if dataset['vertical_min'] is not none or dataset['vertical_max'] is not none %}
          <gmd:verticalElement>
            <gmd:EX_VerticalExtent>
              {% if dataset['vertical_min'] is not none %}
              <gmd:minimumValue>
                <gco:Real>{{dataset['vertical_min']}}</gco:Real>
              </gmd:minimumValue>
              {% endif %}
              {% if dataset['vertical_max'] is not none %}
              <gmd:maximumValue>
                <gco:Real>{{dataset['vertical_max']}}</gco:Real>
              </gmd:maximumValue>
              {% endif %}
              {# <!-- TODO: gmd:verticalCRS, is a gml:ProjectedCRS or similar --> #}
            </gmd:EX_VerticalExtent>
          </gmd:verticalElement>
          {% endif %}
        </gmd:EX_Extent>
      </gmd:extent>
      {% if dataset['supplemental'] %}
      <gmd:supplementalInformation>{{ iso.render_text(dataset['supplemental']) }}</gmd:supplementalInformation>
      {% endif %}
    </gmd:MD_DataIdentification>
  </gmd:identificationInfo>
  {# <!-- contentInfo --> #}
  {% if dataset['distributors'] %}
  {% for dc in dataset['distributors'] %}
  <gmd:distributionInfo>
      {{ iso.render_distribution(dc) }}
  </gmd:distributionInfo>
  {% endfor %}
  {% endif %}
  {% if iso19115_custom_distribution_channels %}
  {% for dc in iso19115_custom_distribution_channels %}
  <gmd:distributionInfo>
      {{ iso.render_distribution(dc) }}
  </gmd:distributionInfo>
  {% endfor %}
  {% endif %}
  {# <!-- dataQualityInfo --> #}
  {# <!-- portrayalCatalogueInfo --> #}
  {% if dataset['meta_licenses'] %}
  {% for license in dataset['meta_licenses'] %}
  <gmd:metadataConstraints>
    {{ iso.render_constraint(license) }}
  </gmd:metadataConstraints>
  {% endfor %}
  {% endif %}
  {# <!-- applicationSchemaInfo --> #}
  <gmd:metadataMaintenance>
      {% if dataset['metadata_maintenance_frequency'] %}
      {{ iso.render_maintenance_info(dataset['metadata_maintenance_frequency']['short_name'], metadata_maintenance) }}
      {% else %}
      {{ iso.render_maintenance_info("", metadata_maintenance) }}
      {% endif %}
  </gmd:metadataMaintenance>
  {# <!-- series--> #}
  {# <!-- describes--> #}
  {# <!-- propertyType--> #}
  {# <!-- featureType--> #}
  {# <!-- featureAttribute--> #}
</gmd:MD_Metadata>
